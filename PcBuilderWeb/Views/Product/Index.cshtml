@using Microsoft.AspNetCore.Mvc.TagHelpers
@using PcBuilder.Web.ViewModels.Product
@using PcBuilder.Data.Models.Enums
@model PaginatedProductsViewModel
@using static PcBuilder.Common.RolesValidation

<link rel="stylesheet" href="~/css/ProductIndex.css" />
<link rel="stylesheet" href="~/css/site.css" />

<div class="container">
    <h2>All Products</h2>

    @if (User.IsInRole(AdminRole))
    {
        <div class="add-product-btn mb-4">
            <a asp-action="AddProduct" class="btn btn-primary">Add New Product</a>
        </div>
    }


    <form method="get" asp-controller="Product" asp-action="SearchProducts" class="search-bar d-flex align-items-center justify-content-between mb-4">
	    <input type="text" name="name" placeholder="Search by name..."  class="form-control me-2" value="@ViewBag.SearchName" />

	    <select name="manufacturerId" class="form-select me-2">
		    <option value="">All Manufacturers</option>
		    @foreach (var manufacturer in Enum.GetValues(typeof(ManufacturerType)).Cast<ManufacturerType>())
		    {
			    @if (ViewBag.SelectedManufacturer != null 
			         && (int)manufacturer == ViewBag.SelectedManufacturer)
			    {
				    <option value="@((int)manufacturer)" selected>@manufacturer.ToString()</option>
			    }
			    else
			    {
				    <option value="@((int)manufacturer)">@manufacturer.ToString()</option>
			    }
		    }
	    </select>

	    <select name="categoryId" class="form-select me-2">
		    <option value="">All Categories</option>
		    @foreach (var category in Enum.GetValues(typeof(CategoryType)).Cast<CategoryType>())
		    {
			    @if (ViewBag.SelectedCategory != null
			         && (int)category == ViewBag.SelectedCategory)
			    {
				    <option value="@((int)category)" selected>@category.ToString()</option>
			    }
			    else
			    {
				    <option value="@((int)category)">@category.ToString()</option>
			    }
		    }
	    </select>

	    <input type="number" name="minPrice" placeholder="Min Price" class="form-control me-2" value="@ViewBag.MinPrice" />
	    <input type="number" name="maxPrice" placeholder="Max Price" class="form-control me-2" value="@ViewBag.MaxPrice" />

	    <input type="hidden" name="page" value="1" />
	    <input type="hidden" name="pageSize" value="18" />

	    <button type="submit" class="btn btn-primary">Search</button>
    </form>

   
    <div id="searchResultsContainer" class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3">
        @if (Model.Products != null && Model.Products.Any())
        {
            @foreach (var product in Model.Products)
            {
                <div class="col product-card" data-id="@product.Id">
                    <div class="card h-100 shadow-sm">
                        <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" class="card-link">
                            <img src="@product.ImageUrl" class="card-img-top" alt="@product.ProductName" />
                        </a>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-center">@product.ProductName</h5>
                            <p class="card-text text-center text-muted">@product.ProductPrice.ToString("C")</p>

                            @if (User.IsInRole(AdminRole))
                            {
                                <p class="text-muted small">Added On: @product.AddedOn.ToString()</p>
                            }

                            <div class="mt-auto">
                                <div class="d-flex justify-content-center gap-2">
                                    @if (product.Quantity > 0)
                                    {
                                        @if (User.Identity.IsAuthenticated && User.IsInRole(UserRole))
                                        {
                                            <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-inline">
                                                <input type="hidden" name="productId" value="@product.Id" />
                                                <button type="submit" class="btn btn-primary btn-sm">Add to Cart</button>
                                            </form>
                                        }
                                    }

                                    @if (User.IsInRole(AdminRole))
                                    {
	                                    @if (product.isDeleted)
	                                    {
		                                    <button type="button" class="btn btn-success btn-sm toggleVisibility" data-product-id="@product.Id">Show</button>
	                                    }
	                                    else
	                                    {
		                                    <button type="button" class="btn btn-danger btn-sm toggleVisibility" data-product-id="@product.Id">Hide</button>
	                                    }
                                    }
                                </div>

                                @if (product.Quantity <= 0)
                                {
                                    <div class="text-center mt-2">
                                        <span class="badge bg-danger">Out of Stock</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-center">No products found.</p>
        }
    </div>

    <div id="paginationControls" class="mt-4">
        @if (Model.TotalPages > 1)
        {
            <nav class="pagination">
                <ul class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="Product" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            <a class="page-link" asp-controller="Product" asp-action="Index" asp-route-page="@i">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="Product" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/productVisibility.js"></script>
<script src="~/js/productSearch.js"></script>
